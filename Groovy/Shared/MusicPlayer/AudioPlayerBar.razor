@using Groovy.Services.Contracts;
@inject IAudioPlayerService AudioPlayerService

<div class="music_player_bar">
    <input type="range" min="0.0" max=@Math.Round(AudioPlayerService.TotalDuration, 0) step="1"
           value=@Math.Round(AudioPlayerService.CurrentPosition, 0) @oninput="SeekToPosition" />

<div class="track-info">
    <button @onclick="ToggleDisplay">
        <img 
            src="https://images.squarespace-cdn.com/content/v1/5a0dd6831f318dcf5130a0d5/1576103195779-29D5AYRBXRINS7ALNSF4/images+%286%29.jpeg"
            alt="Imagen del album"
        >
    </button>
    <div class="data">
            <p>@Math.Round(AudioPlayerService.CurrentPosition, 2)</p>
            <p>@Math.Round(AudioPlayerService.TotalDuration, 2)</p>
        <p>Artista</p>
    </div>
    <div class="audio-control">
        <button @onclick="Play">O</button>
        <button @onclick="Pause">X</button>
        <button>></button>
    </div>
</div>

</div>

@code {
    [Parameter]
    public Action ToggleDisplay { get; set; }

    private void Play()
    {
        AudioPlayerService.Play();
    }

    private void Pause()
    {
        AudioPlayerService.Pause();
    }

    private void Stop()
    {
        AudioPlayerService.Stop();
    }

    private void SeekToPosition(ChangeEventArgs e)
    {
        double newPosition = Convert.ToDouble(e.Value);
        AudioPlayerService.SeekTo(newPosition);
    }

    protected override void OnInitialized()
    {
        AudioPlayerService.OnAudioStateChanged += StateHasChanged;
    }
}
